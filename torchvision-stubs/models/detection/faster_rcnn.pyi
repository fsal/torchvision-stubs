# Stubs for torchvision.models.detection.faster_rcnn (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .generalized_rcnn import GeneralizedRCNN
from torch import nn
from typing import Any, Optional

class FasterRCNN(GeneralizedRCNN):
    def __init__(self, backbone: Any, num_classes: Optional[Any] = ..., min_size: int = ..., max_size: int = ..., image_mean: Optional[Any] = ..., image_std: Optional[Any] = ..., rpn_anchor_generator: Optional[Any] = ..., rpn_head: Optional[Any] = ..., rpn_pre_nms_top_n_train: int = ..., rpn_pre_nms_top_n_test: int = ..., rpn_post_nms_top_n_train: int = ..., rpn_post_nms_top_n_test: int = ..., rpn_nms_thresh: float = ..., rpn_fg_iou_thresh: float = ..., rpn_bg_iou_thresh: float = ..., rpn_batch_size_per_image: int = ..., rpn_positive_fraction: float = ..., box_roi_pool: Optional[Any] = ..., box_head: Optional[Any] = ..., box_predictor: Optional[Any] = ..., box_score_thresh: float = ..., box_nms_thresh: float = ..., box_detections_per_img: int = ..., box_fg_iou_thresh: float = ..., box_bg_iou_thresh: float = ..., box_batch_size_per_image: int = ..., box_positive_fraction: float = ..., bbox_reg_weights: Optional[Any] = ...) -> None: ...

class TwoMLPHead(nn.Module):
    fc6: Any = ...
    fc7: Any = ...
    def __init__(self, in_channels: Any, representation_size: Any) -> None: ...
    def forward(self, x: Any): ...

class FastRCNNPredictor(nn.Module):
    cls_score: Any = ...
    bbox_pred: Any = ...
    def __init__(self, in_channels: Any, num_classes: Any) -> None: ...
    def forward(self, x: Any): ...

def fasterrcnn_resnet50_fpn(pretrained: bool = ..., progress: bool = ..., num_classes: int = ..., pretrained_backbone: bool = ..., **kwargs: Any): ...
