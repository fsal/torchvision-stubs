# Stubs for torchvision.models.densenet (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import torch.nn.functional as nn
from typing import Any

class _DenseLayer(nn.Sequential):
    drop_rate: Any = ...
    def __init__(self, num_input_features: Any, growth_rate: Any, bn_size: Any, drop_rate: Any) -> None: ...
    def forward(self, x: Any): ...

class _DenseBlock(nn.Sequential):
    def __init__(self, num_layers: Any, num_input_features: Any, bn_size: Any, growth_rate: Any, drop_rate: Any) -> None: ...

class _Transition(nn.Sequential):
    def __init__(self, num_input_features: Any, num_output_features: Any) -> None: ...

class DenseNet(nn.Module):
    features: Any = ...
    classifier: Any = ...
    def __init__(self, growth_rate: int = ..., block_config: Any = ..., num_init_features: int = ..., bn_size: int = ..., drop_rate: int = ..., num_classes: int = ...) -> None: ...
    def forward(self, x: Any): ...

def densenet121(pretrained: bool = ..., progress: bool = ..., **kwargs: Any): ...
def densenet161(pretrained: bool = ..., progress: bool = ..., **kwargs: Any): ...
def densenet169(pretrained: bool = ..., progress: bool = ..., **kwargs: Any): ...
def densenet201(pretrained: bool = ..., progress: bool = ..., **kwargs: Any): ...
