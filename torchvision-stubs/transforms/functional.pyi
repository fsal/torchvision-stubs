# Stubs for torchvision.transforms.functional (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import collections
from typing import Any, Optional

Sequence: Any
Iterable: Any
Sequence = collections.abc.Sequence
Iterable = collections.abc.Iterable

def to_tensor(pic: Any): ...
def to_pil_image(pic: Any, mode: Optional[Any] = ...): ...
def normalize(tensor: Any, mean: Any, std: Any, inplace: bool = ...): ...
def resize(img: Any, size: Any, interpolation: Any = ...): ...
def scale(*args: Any, **kwargs: Any): ...
def pad(img: Any, padding: Any, fill: int = ..., padding_mode: str = ...): ...
def crop(img: Any, i: Any, j: Any, h: Any, w: Any): ...
def center_crop(img: Any, output_size: Any): ...
def resized_crop(img: Any, i: Any, j: Any, h: Any, w: Any, size: Any, interpolation: Any = ...): ...
def hflip(img: Any): ...
def perspective(img: Any, startpoints: Any, endpoints: Any, interpolation: Any = ...): ...
def vflip(img: Any): ...
def five_crop(img: Any, size: Any): ...
def ten_crop(img: Any, size: Any, vertical_flip: bool = ...): ...
def adjust_brightness(img: Any, brightness_factor: Any): ...
def adjust_contrast(img: Any, contrast_factor: Any): ...
def adjust_saturation(img: Any, saturation_factor: Any): ...
def adjust_hue(img: Any, hue_factor: Any): ...
def adjust_gamma(img: Any, gamma: Any, gain: int = ...): ...
def rotate(img: Any, angle: Any, resample: bool = ..., expand: bool = ..., center: Optional[Any] = ...): ...
def affine(img: Any, angle: Any, translate: Any, scale: Any, shear: Any, resample: int = ..., fillcolor: Optional[Any] = ...): ...
def to_grayscale(img: Any, num_output_channels: int = ...): ...
