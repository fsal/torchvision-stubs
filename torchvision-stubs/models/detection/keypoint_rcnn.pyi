# Stubs for torchvision.models.detection.keypoint_rcnn (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .faster_rcnn import FasterRCNN
from torch import nn
from typing import Any, Optional

class KeypointRCNN(FasterRCNN):
    def __init__(self, backbone: Any, num_classes: Optional[Any] = ..., min_size: Optional[Any] = ..., max_size: int = ..., image_mean: Optional[Any] = ..., image_std: Optional[Any] = ..., rpn_anchor_generator: Optional[Any] = ..., rpn_head: Optional[Any] = ..., rpn_pre_nms_top_n_train: int = ..., rpn_pre_nms_top_n_test: int = ..., rpn_post_nms_top_n_train: int = ..., rpn_post_nms_top_n_test: int = ..., rpn_nms_thresh: float = ..., rpn_fg_iou_thresh: float = ..., rpn_bg_iou_thresh: float = ..., rpn_batch_size_per_image: int = ..., rpn_positive_fraction: float = ..., box_roi_pool: Optional[Any] = ..., box_head: Optional[Any] = ..., box_predictor: Optional[Any] = ..., box_score_thresh: float = ..., box_nms_thresh: float = ..., box_detections_per_img: int = ..., box_fg_iou_thresh: float = ..., box_bg_iou_thresh: float = ..., box_batch_size_per_image: int = ..., box_positive_fraction: float = ..., bbox_reg_weights: Optional[Any] = ..., keypoint_roi_pool: Optional[Any] = ..., keypoint_head: Optional[Any] = ..., keypoint_predictor: Optional[Any] = ..., num_keypoints: int = ...) -> None: ...

class KeypointRCNNHeads(nn.Sequential):
    def __init__(self, in_channels: Any, layers: Any) -> None: ...

class KeypointRCNNPredictor(nn.Module):
    kps_score_lowres: Any = ...
    up_scale: int = ...
    out_channels: Any = ...
    def __init__(self, in_channels: Any, num_keypoints: Any) -> None: ...
    def forward(self, x: Any): ...

def keypointrcnn_resnet50_fpn(pretrained: bool = ..., progress: bool = ..., num_classes: int = ..., num_keypoints: int = ..., pretrained_backbone: bool = ..., **kwargs: Any): ...
